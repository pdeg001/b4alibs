<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.CheckInternet.B4X_Develop.AH_CheckInternet</name>
        <shortname>AH_CheckInternet</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <permission>android.permission.ACCESS_NETWORK_STATE</permission>
        <permission>android.permission.ACCESS_WIFI_STATE</permission>
        <method>
            <name>Get_Ping</name>
            <comment>Get_ping, Get time like (time=0.251 ms)
 
 Example:&lt;code&gt;
 Dim AH_CheckInternet As AH_CheckInternet
 log(AH_CheckInternet.Get_Ping("127.0.0.1"))
 &lt;/code&gt;
 
 &lt;link&gt;About Ping|http://en.wikipedia.org/wiki/Ping&lt;/link&gt;
host: as string: Example "127.0.0.1"</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>host</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get_SimOperator</name>
            <comment>Returns the code of the SIM provider.
Returns an empty string if it is not available.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Get_SimOperator)
&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Get_PingStats</name>
            <comment>Get_PingStats interprets the text result of a Linux ping command
 
 Set pingError on error and return null
 
 Example:&lt;code&gt;
 Dim AH_CheckInternet As AH_CheckInternet
 log(AH_CheckInternet.Get_PingStats("127.0.0.1"))
 &lt;/code&gt;
 
 &lt;link&gt;About Ping|http://en.wikipedia.org/wiki/Ping&lt;/link&gt;
 
 PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.251 ms
 64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.294 ms
 64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.295 ms
 64 bytes from 127.0.0.1: icmp_seq=4 ttl=64 time=0.300 ms

 --- 127.0.0.1 ping statistics ---
 4 packets transmitted, 4 received, 0% packet loss, time 0ms
 rtt min/avg/max/mdev = 0.251/0.285/0.300/0.019 ms
 
 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data.
 
 --- 192.168.0.2 ping statistics ---
 1 packets transmitted, 0 received, 100% packet loss, time 0ms

 # ping 321321.
 ping: unknown host 321321.
 
 1. Check if output contains 0% packet loss : Branch to success -&gt; Get stats
 2. Check if output contains 100% packet loss : Branch to fail -&gt; No stats
 3. Check if output contains 25% packet loss : Branch to partial success -&gt; Get stats
 4. Check if output contains "unknown host"
url: as string: Example "127.0.0.1"</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get_IPAddress</name>
            <comment>Get IP address from first non-localhost interface
 Example: &lt;code&gt;
 Dim AH_CheckInternet as AH_CheckInternet
 Log(AH_CheckInternet.Get_IPAddress)
 &lt;/code&gt;
useIPv4: true=return ipv4, false=return ipv6
Return type: @return:address or empty string</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>useIPv4</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Check_Vpn</name>
            <comment>Returns true if the device is connected to the VPN.
&lt;b&gt;Note: Before this Method you have to check the Internet connection.&lt;/b&gt;
&lt;code&gt;
Dim AH_CheckInternet As AH_CheckInternet
If AH_CheckInternet.Check_NetworkConnection Then
	Log(AH_CheckInternet.Check_Vpn)
End If
&lt;/code&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Get_MACAddress</name>
            <comment>Returns MAC address of the given interface name.
 Example: &lt;code&gt;
 Dim AH_CheckInternet as AH_CheckInternet
 Log(AH_CheckInternet.Get_MACAddress)
 &lt;/code&gt;
interfaceName: eth0, wlan0 or NULL=use first interface
Return type: @return:mac address or empty string</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>interfaceName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Check_NetworkRoaming</name>
            <comment>Returns true if the device is considered roaming on the current network.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Check_NetworkRoaming)
&lt;/code&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Get_NetworkOperatorName</name>
            <comment>Return the name of current registered operator.
Return an empty string if it is not available.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Get_NetworkOperatorName)
&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Get_DataState</name>
            <comment>Return The Current Cellular Data Connection State.
Possible Values: CONNECTED, DISCONNECTED, SUSPENDED, CONNECTING, DISCONNECTED.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Get_DataState)
&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Get_WifiOrDataMobile</name>
            <comment>Returns &lt;b&gt;WIFI&lt;/b&gt; if the device is connected to the Internet with Wi-Fi.
Returns &lt;b&gt;MOBILEDATA&lt;/b&gt; if the device is connected to the Internet with Mobile Data.
Returns &lt;b&gt;UNKNOWN&lt;/b&gt; If unknown. For example, it is not connected to the Internet.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Get_WifiOrDataMobile)
&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Check_IPv4orIPv6</name>
            <comment>Check the IP is IPv4 or IPv6.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Check_IPv4orIPv6("192.168.1.1"))
&lt;/code&gt;
Return type: @return:ipv6,ipv4,UNKNOWN</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ip</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Check_NetworkConnection</name>
            <comment>Returns true if the device is connected to the Internet.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Check_NetworkConnection)
&lt;/code&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Check_AirplaneMode</name>
            <comment>Tests whether the phone "airplane mode" is on.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Check_AirplaneMode)
&lt;/code&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Get_PingHost</name>
            <comment>Ping a host and return an int value of 0 or 1 or 2 0=success, 1=fail, 2=error
 
 Does not work in Android emulator and also delay by '1' second if host not pingable
 In the Android emulator only ping to 127.0.0.1 works
 Example: &lt;code&gt;
 Dim AH_CheckInternet As AH_CheckInternet
 log(AH_CheckInternet.Get_PingHost("119.147.15.13"))
 &lt;/code&gt;
String: host in dotted IP address format
Return type: @return:return an int value of 0 or 1 or 2 0=success, 1=fail, 2=error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>host</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get_NetworkType</name>
            <comment>Returns the currently used cellular network type.
Possible values: 1xRTT, CDMA, EDGE, EHRPD, EVDO_0, EVDO_A, EVDO_B, GPRS, HSDPA, HSPA, HSPAP, HSUPA, IDEN, LTE, UMTS, UNKNOWN.
&lt;code&gt;
Dim AH_CheckInternet as AH_CheckInternet
Log(AH_CheckInternet.Get_NetworkType)
&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Get_PingLog</name>
            <comment>You can get the ping log
 
 Example:&lt;code&gt;
 Dim AH_CheckInternet As AH_CheckInternet
 log(AH_CheckInternet.Get_PingLog("119.147.15.13"))
 &lt;/code&gt;
 
 Export:
 PING 119.147.15.13 (119.147.15.13) 56(84) bytes of data.
 --- 119.147.15.13 ping statistics --- 
 8 packets transmitted, 0 received, 100% packet loss, time 7008ms
 
 &lt;link&gt;About Ping|http://en.wikipedia.org/wiki/Ping&lt;/link&gt;
url: as string: Example "119.147.15.13"</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>ABOUT</name>
            <comment>IN THE NAME OF GOD
AH_CheckInternet (All rights reserved)
&lt;b&gt;Channel:&lt;/b&gt; &lt;link&gt;B4X Develop|https://t.me/b4x_develop&lt;/link&gt;
&lt;b&gt;Created By:&lt;/b&gt; &lt;link&gt;Alireza Hassanzadeh|https://t.me/Alireza_hnz&lt;/link&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <version>1.5</version>
    <author>Alireza Hassanzadeh @B4X_Develop</author>
</root>
